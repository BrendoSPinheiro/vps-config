# Arquivo de configuração principal do Nginx.
# Definimos nele as configurações globais/básicas do servidor e referenciamos outros arquivos de configuração.

# Define qual usuário do sistema operacional irá rodar ou ser responsável pelo processo do Nginx.
user nginx;

# Define/Controla a quantidade de processos que irão rodar os workers que executam as tarefas do Nginx.
# Cada processo pode lidar com várias conexões simultâneas.
worker_processes auto;

# Habilita o uso do módulo PCRE JIT (Just-In-Time) para otimizar/acelerar a execução de expressões regulares.
pcre_jit on;

# Define o arquivo de log de erros global do Nginx e o nível de log que será registrado.
# PS: É possível definir um arquivo de log de erros e um arquivo de log de acessos específico para cada domínio/virtual host.
error_log /var/log/nginx/error.log warn;

# Inclui todos os arquivos de configuração dos módulos do Nginx.
include /etc/nginx/modules/*.conf;

events {
    # Define a quantidade máxima de conexões simultâneas que um worker pode lidar.
    worker_connections 1024;
}

http {
    # Inclui o arquivo de mime types que define um mapa de tipos de conteúdo (content-type) para extensões de arquivos.
    include /etc/nginx/mime.types;
    # Define o tipo de conteúdo (content-type) padrão que será usado quando
    # o mesmo não for especificado no header da resposta da API, por exemplo.
    default_type application/octet-stream;

    # Desabilita a exibição da versão do Nginx nos cabeçalhos de resposta.
    server_tokens off;

    # Define o tamanho máximo do corpo da requisição que o servidor irá aceitar.
    client_max_body_size 1m;

    # Habilita o uso do sendfile para otimizar a transferência de arquivos.
    sendfile on;
    # Define o tamanho máximo do chunk que será enviado pelo sendfile.
    sendfile_max_chunk 1m;

    tcp_nopush on;

    # Define os protocolos SSL/TLS que o servidor irá suportar.
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    # Habilita a preferência por ciphers definidos pelo servidor.
    ssl_prefer_server_ciphers on;
    # Define o tamanho da cache de sessões SSL.
    ssl_session_cache shared:SSL:2m;
    # Define o tempo de expiração das sessões SSL.
    ssl_session_timeout 1h;
    # Desabilita o uso de tickets de sessão SSL.
    ssl_session_tickets off;

    # Habilita a compressão de dados.
    gzip on;

    # Desabilita a compressão para o Internet Explorer 6. (não é mais necessário)
    gzip_disable "msie6";

    # Define o tamanho mínimo do conteúdo que será comprimido (bytes).
    gzip_min_length 20;

    # Define o nível de compressão que será aplicado. Sendo 1 o nível mais baixo e 9 o mais alto.
    # Quanto menor o nível, mais rápido será o processo de compressão, mas o tamanho do arquivo será maior.
    # Quanto maior o nível, mais lento será o processo de compressão, mas o tamanho do arquivo será menor.
    # O nível 5 é um bom ponto de equilíbrio entre velocidade e tamanho do arquivo.
    gzip_comp_level 5;

    gzip_vary on;

    # `gzip_proxied any` Define que o nginx deve comprimir as respostas de todas as requisições proxy
    # (requisições onde o nginx atuou como proxy), independente de cabeçalhos específicos ou status de resposta.
    gzip_proxied any;

    # Define o número e tamanho dos buffers usados para armazenar os dados comprimidos antes de enviá-los ao cliente.
    # O primeiro valor (16) especifica o número de buffers que serão alocados para armaenar os dados comprimidos.
    # O segundo valor (8k) especifica o tamanho de cada buffer, neste caso 8 kilobytes.
    # O nginx irá alocar um total de 16 * 8k = 128 kilobytes de memória para armazenar os dados comprimidos.
    gzip_buffers 16 8k;

    # Define a versão mínima do protocolo HTTP que deve ser usada para que a compressão seja aplicada.
    # A compressão só será aplicada a requisições que utilizarem a versão 1.1 ou superior do protocolo HTTP.
    gzip_http_version 1.1;

    # Define os tipos de conteúdo que serão comprimidos.
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Define o formato dos logs que serão registrados.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Define o arquivo de log de acessos global do Nginx e o formato de log que será registrado.
    access_log /var/log/nginx/access.log main;

    # Inclui todos os arquivos de configuração de cada domínio/virtual host.
    include /etc/nginx/http.d/*.conf;
}
